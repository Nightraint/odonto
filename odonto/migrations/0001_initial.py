# Generated by Django 2.2.4 on 2020-01-10 22:16

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='Ficha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('detalle', models.TextField(blank=True, max_length=1000)),
                ('creada', models.DateTimeField(auto_now_add=True)),
                ('actualizada', models.DateTimeField(auto_now=True)),
                ('clinica', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odonto.Clinica')),
            ],
        ),
        migrations.CreateModel(
            name='Obra_Social',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField()),
                ('nombre', models.CharField(max_length=100)),
                ('usa_bonos', models.BooleanField(default=False)),
                ('usa_coseguro', models.BooleanField(default=False)),
                ('usa_autorizacion', models.BooleanField(default=False)),
                ('usa_planes', models.BooleanField(default=False)),
                ('observaciones', models.TextField(blank=True, max_length=1000)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('clinica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Clinica')),
            ],
            options={
                'ordering': ('nombre',),
                'unique_together': {('codigo', 'clinica')},
            },
        ),
        migrations.CreateModel(
            name='Odontologo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_apellido', models.CharField(max_length=100, verbose_name='Nombre y apellido')),
                ('domicilio', models.CharField(blank=True, max_length=100)),
                ('telefono', models.CharField(blank=True, max_length=100)),
                ('dni', models.CharField(blank=True, max_length=100)),
                ('matricula', models.CharField(blank=True, max_length=100)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('clinica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Clinica')),
                ('obras_sociales', models.ManyToManyField(blank=True, to='odonto.Obra_Social')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_apellido', models.CharField(max_length=100, verbose_name='Nombre y apellido')),
                ('domicilio', models.CharField(blank=True, max_length=100)),
                ('dni', models.CharField(blank=True, max_length=100)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('clinica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Clinica')),
                ('odontologos', models.ManyToManyField(blank=True, to='odonto.Odontologo')),
            ],
            options={
                'ordering': ('nombre_apellido',),
            },
        ),
        migrations.CreateModel(
            name='Telefono',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=100)),
                ('telefono', models.CharField(max_length=100)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('paga_coseguro', models.BooleanField(blank=True, null=True, verbose_name='Paga coseguro')),
                ('iva', models.CharField(blank=True, choices=[('', 'Seleccione IVA'), ('GR', 'Gravado'), ('NG', 'No gravado'), ('EX', 'Exento')], max_length=2, null=True)),
                ('obra_social', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Obra_Social')),
            ],
            options={
                'ordering': ('nombre',),
            },
        ),
        migrations.CreateModel(
            name='PacienteObraSocial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nro_afiliado', models.CharField(max_length=20, verbose_name='Nro. Afiliado')),
                ('obra_social', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odonto.Obra_Social')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Paciente')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='odonto.Plan')),
            ],
        ),
        migrations.CreateModel(
            name='Norma_Trabajo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=100)),
                ('dias', models.IntegerField(blank=True, null=True)),
                ('meses', models.IntegerField(blank=True, null=True)),
                ('a√±os', models.IntegerField(blank=True, null=True)),
                ('descripcion', models.TextField(max_length=2000, verbose_name='Concepto')),
                ('coseguro', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('bonos', models.IntegerField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('clinica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Clinica')),
                ('obra_social', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Obra_Social')),
            ],
            options={
                'ordering': ('obra_social__nombre',),
                'unique_together': {('codigo', 'obra_social', 'clinica')},
            },
        ),
        migrations.CreateModel(
            name='Imagen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ruta', models.TextField()),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='imagenes_fichas/')),
                ('ficha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Ficha')),
            ],
        ),
        migrations.AddField(
            model_name='ficha',
            name='norma_trabajo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='odonto.Norma_Trabajo'),
        ),
        migrations.AddField(
            model_name='ficha',
            name='obra_social',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='odonto.Obra_Social'),
        ),
        migrations.AddField(
            model_name='ficha',
            name='odontologo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odonto.Odontologo'),
        ),
        migrations.AddField(
            model_name='ficha',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='odonto.Paciente'),
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('clinica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='odonto.Clinica')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
